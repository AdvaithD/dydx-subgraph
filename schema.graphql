type Market @entity {
  id: ID!
  tokenAddress: Bytes! # address
  tokenSymbol: String
  borrowIndex: BigInt
  supplyIndex: BigInt
  lastIndexUpdate: BigInt
}

type Long @entity {
  id: ID!
  accountOwner: Bytes! # address
  accountNumber: BigInt! # uint256
  takerMarketId: BigInt! # uint256
  makerMarketId: BigInt! # uint256
  market: String!
  # takerUpdate_deltaWei_sign: Boolean! # bool
  # takerUpdate_deltaWei_value: BigInt! # uint256
  # takerUpdate_newPar_sign: Boolean! # bool
  # takerUpdate_newPar_value: BigInt! # uint128
  # makerUpdate_deltaWei_sign: Boolean! # bool
  # makerUpdate_deltaWei_value: BigInt! # uint256
  # makerUpdate_newPar_sign: Boolean! # bool
  # makerUpdate_newPar_value: BigInt! # uint128
  exchangeWrapper: Bytes! # address
  timestamp: BigInt! # uint128
  amount: BigInt!
  marginDeposit: BigInt!
  leverage: BigDecimal
  expires: BigInt
  openPrice: BigDecimal!
  closed: Boolean!
}

type Short @entity {
  id: ID!
  accountOwner: Bytes! # address
  accountNumber: BigInt! # uint256
  takerMarketId: BigInt! # uint256
  makerMarketId: BigInt! # uint256
  market: String!
  takerUpdate_deltaWei_sign: Boolean! # bool
  takerUpdate_deltaWei_value: BigInt! # uint256
  takerUpdate_newPar_sign: Boolean! # bool
  takerUpdate_newPar_value: BigInt! # uint128
  makerUpdate_deltaWei_sign: Boolean! # bool
  makerUpdate_deltaWei_value: BigInt! # uint256
  makerUpdate_newPar_sign: Boolean! # bool
  makerUpdate_newPar_value: BigInt! # uint128
  exchangeWrapper: Bytes! # address
  timestamp: BigInt! # uint128
  amount: BigInt!
  marginDeposit: BigInt!
  leverage: BigDecimal
  expires: BigInt
  openPrice: BigDecimal
}
