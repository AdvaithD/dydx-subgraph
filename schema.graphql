type Market @entity {
  id: ID!
  marketId: BigInt! # uint256
  token: Bytes! # address
}

type Index @entity {
  id: ID!
  market: BigInt! # uint256
  borrow: BigInt! # uint96
  supply: BigInt! # uint96
  lastUpdate: BigInt! # uint32
}

type Buy @entity {
  id: ID!
  accountOwner: Bytes! # address
  accountNumber: BigInt! # uint256
  takerMarket: BigInt! # uint256
  makerMarket: BigInt! # uint256
  takerUpdate_deltaWei_sign: Boolean! # bool
  takerUpdate_deltaWei_value: BigInt! # uint256
  takerUpdate_newPar_sign: Boolean! # bool
  takerUpdate_newPar_value: BigInt! # uint128
  makerUpdate_deltaWei_sign: Boolean! # bool
  makerUpdate_deltaWei_value: BigInt! # uint256
  makerUpdate_newPar_sign: Boolean! # bool
  makerUpdate_newPar_value: BigInt! # uint128
  exchangeWrapper: Bytes! # address
  timestamp: BigInt! # uint128
  value: BigInt!
  leverage: BigInt
  expires: BigInt # uint128
}

type Sell @entity {
  id: ID!
  accountOwner: Bytes! # address
  accountNumber: BigInt! # uint256
  takerMarket: BigInt! # uint256
  makerMarket: BigInt! # uint256
  takerUpdate_deltaWei_sign: Boolean! # bool
  takerUpdate_deltaWei_value: BigInt! # uint256
  takerUpdate_newPar_sign: Boolean! # bool
  takerUpdate_newPar_value: BigInt! # uint128
  makerUpdate_deltaWei_sign: Boolean! # bool
  makerUpdate_deltaWei_value: BigInt! # uint256
  makerUpdate_newPar_sign: Boolean! # bool
  makerUpdate_newPar_value: BigInt! # uint128
  exchangeWrapper: Bytes! # address
  timestamp: BigInt! # uint128
  value: BigInt!
  expires: BigInt # uint128
}

type Expiry @entity {
  id: ID!
  accountOwner: Bytes! # address
  accountNumber: BigInt! # uint256
  marketId: BigInt! # uint256
  time: BigInt! # uint32
}
